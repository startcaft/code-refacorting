模板方法模式是 类的行为模式。
准备一个 抽象类。将部分逻辑以具体方法的形式实现，然后声明一些 抽象方法 来迫使子类实现剩余的逻辑，不同的子类可以以不同的方式实现这些抽象方法。
不同的子类对 剩余逻辑的不同实现，就是模板方法模式的用意。

模板方法模式就是基于继承的代码服用的基本技术，其结构和用法也是面向对象设计的核心。
模板方法模式涉及两个角色：
1，抽象模板（Abstract Template）
	定义一个或多个 抽象操作，以便让子类实现。
	定义一个 模板方法。模板方法一般是一个具体方法，方法体内会调用相应的 抽象操作，推迟到子类去实现。

2，具体模板（Concrete Template）
	实现父类所定义的 抽象操作。
	
一个例子：银行计算利息，两种不同的账号：货币市场账号和定期存款账号。不同的账号存款利息不同。
显然，需要一个 抽象角色（账号） 给出顶级行为的定义，而将两个不同类型的账号的实现分别对应不同的子类。


模板方法中的方法可以分为两大类：
1，模板方法
	一个模板方法是定义在 抽象类中的，把基本操作方法组合在一起形成一个总算法或一个总行为。由子类不加以修改地完全继承下来。
	
2，基本方法
	基本方法又可以分为三种：
	2-1，抽象方法，由具体子类实现。
	2-2，具体方法，抽象类中声明并实现，子类不实现或置换。
	2-3，钩子方法，抽象类中声明并实现，而子类会加以扩展。通常抽象类给出的实现是一个空实现，作为方法的默认实现。
	
