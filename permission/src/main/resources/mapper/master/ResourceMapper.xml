<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.basic.core.dao.master.ResourceDao">

    <resultMap id="BaseResultMap" type="com.basic.core.entity.Resource">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="create_datetime" property="createDatetime" jdbcType="TIMESTAMP"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="resource_type" property="resourceType" jdbcType="INTEGER"/>
        <result column="seq" property="seq" jdbcType="INTEGER"/>
        <result column="states" property="states" jdbcType="INTEGER"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="pid" property="pid" jdbcType="BIGINT"/>
        <result column="app_id" property="appId" jdbcType="BIGINT"/>
        <result column="level" property="level" jdbcType="INTEGER"/>
        <result column="is_leaf" property="isLeaf" jdbcType="BOOLEAN"/>
        <result column="expanded" property="expanded" jdbcType="BOOLEAN"/>
    </resultMap>

    <resultMap type="com.basic.core.entity.Resource" id="ParentResultMap" extends="BaseResultMap">
        <result column="pId" property="resource.id" jdbcType="BIGINT"/>
        <result column="pName" property="resource.name" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
      id, create_datetime, description, icon, name, resource_type, seq, states, url, pid, app_id, is_leaf, expanded, level
    </sql>

    <select id="selectByPrimaryKey" resultMap="ParentResultMap" parameterType="java.lang.Long">
        select r1.*,r2.name as pname
        from sys_resource r1
        left OUTER  join sys_resource r2
        on r1.pid = r2.id
        where r1.id = #{id,jdbcType=BIGINT}
    </select>

    <!--根据用户名查询关联权限下的所有系统资源-->
    <select id="selectByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select distinct  re.* from
        sys_resource re
        join sys_role_resource rr on re.id = rr.resource_id
        join sys_role r on r.id = rr.role_id
        join sys_user_role ur on ur.role_id = r.id
        join sys_user u on u.id = ur.user_id
        where u.login_name = #{_parameter}
    </select>

    <!--根据角色id获取关联权限下的所有系统资源-->
    <select id="selectByRoleId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT DISTINCT  re.* FROM
        sys_resource re
        JOIN sys_role_resource rr ON re.id = rr.resource_id
        JOIN sys_role r ON r.id = rr.role_id
        JOIN sys_user_role ur ON ur.role_id = r.id
        JOIN sys_user u ON u.id = ur.user_id
        WHERE ur.role_id = 1
    </select>

    <select id="selectAll" resultMap="ParentResultMap" parameterType="java.lang.Long">
        select distinct t1.*,t2.name as pname
            from sys_resource t1
        left OUTER  join sys_resource t2
            on t1.pid = t2.id
        where t1.app_id in (0,#{appId})
    </select>

    <select id="selectRoots" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        from sys_resource
        WHERE pid IS NULL
    </select>

    <select id="selectSecondLevelMenus" resultMap="BaseResultMap">
        SELECT DISTINCT  re.* FROM
        sys_resource re
        JOIN sys_role_resource rr ON re.id = rr.resource_id
        JOIN sys_role r ON r.id = rr.role_id
        JOIN sys_user_role ur ON ur.role_id = r.id
        JOIN sys_user u ON u.id = ur.user_id
        WHERE u.login_name = #{loginName} AND re.pid = #{pid} AND re.resource_type = 1
        ORDER BY re.`seq` ASC
    </select>

    <insert id="insert" parameterType="com.basic.core.entity.Resource">
        insert into sys_resource (create_datetime, description,
          icon, name, resource_type,
          seq, states, url, pid,
          app_id,level, is_leaf, expanded
          )
        values (#{createDatetime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR},
          #{icon,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{resourceType,jdbcType=INTEGER},
          #{seq,jdbcType=INTEGER}, #{states,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{pid,jdbcType=BIGINT},
          #{appId,jdbcType=BIGINT}, #{level,jdbcType=INTEGER}, #{isLeaf,jdbcType=BOOLEAN}, #{expanded,jdbcType=BOOLEAN}
          )
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.basic.core.entity.Resource">
        update sys_resource
        <set>
            <if test="createDatetime != null">
                create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="resourceType != null">
                resource_type = #{resourceType,jdbcType=INTEGER},
            </if>
            <if test="seq != null">
                seq = #{seq,jdbcType=INTEGER},
            </if>
            <if test="states != null">
                states = #{states,jdbcType=INTEGER},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=BIGINT},
            </if>
            <if test="appId != null">
                app_id = #{appId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>